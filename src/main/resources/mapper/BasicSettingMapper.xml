<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tm.codemapping.mapper.BasicSettingMapper" >
   
  <select id="getBuildingFloorAreaList" resultMap="buildingResultMap">
    select
    	b.id   		 as  buildingId,
    	b.name 		 as  buildingName,   
    	b.vaild		 as  buildingVaild, 	
    	f.id   		 as  floorId,
    	f.name 		 as  floorName,
    	f.buildingId as  floorBuildingId,
    	f.vaild		 as  floorVaild,
    	a.id   		 as  areaId,
    	a.floorId    as  areaFloorId,
    	a.buildingId as  areaBuildingId,
    	a.name 	     as  areaName,
    	a.number     as  areaNumber,
    	a.remark     as  areaRemark,
    	a.vaild		 as  areaVaild
    	from asset_building b
    	left join asset_floor f on f.buildingId = b.id
    	left join asset_area a  on a.floorId = f.id
    	where b.vaild = 0
  </select>
  <resultMap type="com.tm.codemapping.bean.SettingBuildingBean" id="buildingResultMap">
    <id property="id" column="buildingId"/>
    <result property="name" column="buildingName"/>
    <result property="vaild" column="buildingVaild"/>
    <collection property="floors" ofType="com.tm.codemapping.bean.SettingFloorBean">
      <id property="id" column="floorId"/>
      <result property="name" column="floorName"/>
      <result property="buildingId" column="floorBuildingId"/>
      <result property="vaild" column="floorVaild"/>
      <collection property="areas" ofType="com.tm.codemapping.bean.SettingAreaBean">
        <id property="id" column="areaId"/>
        <result property="name" column="areaName"/>
        <result property="floorId" column="areaFloorId"/>
        <result property="buildingId" column="areaBuildingId"/>
        <result property="number" column="areaNumber"/>
        <result property="remark" column="areaRemark"/>
        <result property="vaild" column="areaVaild"/>
      </collection>
    </collection>
  </resultMap>
  <insert id="insertBuilding">
    insert into asset_building (id,name,vaild) values(uuid(),#{name},1)
  </insert>
  <delete id="deleteBuilding" parameterType="String">
  	delete from asset_building where id=#{id}
  </delete>  
  <update id="updateBuilding">
    update asset_building
    <set>
      <if test="building.name != null">
         name = #{building.name},
      </if>
      <if test="building.id != null">
         id = #{building.id}
      </if>
    </set>
    where id = #{building.id}
  </update>
  
  <insert id="insertFloor">
  	<selectKey keyProperty="count" resultType="int" order="BEFORE">
      select count(*) from asset_building where id = #{buildingId}
    </selectKey>
	<if test="count > 0">
      insert into asset_floor (id,buildingId,name,vaild) values(uuid(),#{buildingId},#{name},1)    
    </if>
  </insert>
  <update id="updateFloor">
  	<selectKey keyProperty="count" resultType="int" order="BEFORE">
      select count(*) from asset_building where id = #{buildingId}
    </selectKey>
	<if test="count > 0">
      update asset_floor set buildingId = #{buildingId}, name = #{name}  
      where id=#{id}
    </if>
  </update>
</mapper>